id: aws_lambda_function_variables_no_sensitive_data
title: Lambda functions variable should not have any sensitive data
description: Ensure functions environment variables is not having any sensitive data. Leveraging Secrets Manager enables secure provisioning of database credentials to Lambda functions while also ensuring the security of databases. This approach eliminates the need to hardcode secrets in code or pass them through environmental variables. Additionally, Secrets Manager facilitates the secure retrieval of credentials for establishing connections to databases and performing queries, enhancing overall security measures.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_lambda_function
    definition: |
        WITH function_vaiable_with_sensitive_data AS (
          SELECT DISTINCT
            arn,
            name
          FROM
            aws_lambda_function
            JOIN jsonb_each_text(environment_variables) d ON true
          WHERE
            d.key ILIKE ANY (ARRAY['%pass%', '%secret%', '%token%', '%key%'])
            OR d.key ~ '(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]'
            OR d.value ILIKE ANY (ARRAY['%pass%', '%secret%', '%token%', '%key%'])
            OR d.value ~ '(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]'
        )
        SELECT
          f.arn AS resource,
          f.platform_integration_id AS platform_integration_id,
          f.platform_resource_id AS platform_resource_id,
          CASE
            WHEN b.arn IS NULL THEN 'ok'
            ELSE 'alarm'
          END AS status,
          CASE
            WHEN b.arn IS NULL THEN f.title || ' has no sensitive data.'
            ELSE f.title || ' has potential sensitive data.'
          END AS reason
        FROM
          aws_lambda_function AS f
          LEFT JOIN function_vaiable_with_sensitive_data b ON f.arn = b.arn;
severity: low
tags: {}
