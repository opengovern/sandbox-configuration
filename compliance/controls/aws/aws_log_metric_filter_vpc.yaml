id: aws_log_metric_filter_vpc
title: Ensure a log metric filter and alarm exist for VPC changes
description: You can do real-time monitoring of API calls by directing CloudTrail logs to CloudWatch Logs and establishing corresponding metric filters and alarms. You can have more than one VPC in an account, and you can create a peer connection between two VPCs, enabling network traffic to route between VPCs. Security Hub recommends that you create a metric filter and alarm for changes to VPCs.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_account
    definition: |
        WITH filter_data AS (
          SELECT
            trail.account_id,
            trail.name AS trail_name,
            trail.is_logging,
            SPLIT_PART(trail.log_group_arn, ':', 7) AS log_group_name,
            filter.name AS filter_name,
            action_arn AS topic_arn,
            alarm.metric_name,
            alarm.name AS alarm_name,
            subscription.subscription_arn,
            filter.filter_pattern
          FROM
            aws_cloudtrail_trail AS trail,
            jsonb_array_elements(trail.event_selectors) AS se,
            aws_cloudwatch_log_metric_filter AS filter,
            aws_cloudwatch_alarm AS alarm,
            jsonb_array_elements_text(alarm.alarm_actions) AS action_arn,
            aws_sns_topic_subscription AS subscription
          WHERE
            trail.is_multi_region_trail IS TRUE
            AND trail.is_logging
            AND se ->> 'ReadWriteType' = 'All'
            AND trail.log_group_arn IS NOT NULL
            AND filter.log_group_name = SPLIT_PART(trail.log_group_arn, ':', 7)
            AND filter.filter_pattern ~ '\s*\$\.eventName\s*=\s*CreateVpc.+\$\.eventName\s*=\s*DeleteVpc.+\$\.eventName\s*=\s*ModifyVpcAttribute.+\$\.eventName\s*=\s*AcceptVpcPeeringConnection.+\$\.eventName\s*=\s*CreateVpcPeeringConnection.+\$\.eventName\s*=\s*DeleteVpcPeeringConnection.+\$\.eventName\s*=\s*RejectVpcPeeringConnection.+\$\.eventName\s*=\s*AttachClassicLinkVpc.+\$\.eventName\s*=\s*DetachClassicLinkVpc.+\$\.eventName\s*=\s*DisableVpcClassicLink.+\$\.eventName\s*=\s*EnableVpcClassicLink'
            AND alarm.metric_name LIKE filter.metric_transformation_name
            AND subscription.topic_arn = action_arn
        )
        SELECT
          DISTINCT 'arn:' || a.partition || ':::' || a.account_id AS resource,
          a.platform_integration_id AS platform_integration_id,
          a.platform_resource_id AS platform_resource_id,
          CASE
            WHEN f.trail_name IS NULL THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN f.trail_name IS NULL THEN 'No log metric filter and alarm exist for VPC changes.'
            ELSE filter_name || ' forwards events for VPC changes.'
          END AS reason,
          a.account_id
        FROM
          aws_account AS a
          LEFT JOIN filter_data AS f ON a.account_id = f.account_id;
severity: high
tags:
    category:
      - Compliance
    cis:
      - 'true'
    cis_item_id:
      - '3.14'
    cis_level:
      - '1'
    cis_section_id:
      - '3'
    cis_type:
      - scored
    cis_version:
      - v1.2.0
    plugin:
      - aws
    service:
      - AWS/CloudWatch
