id: aws_log_metric_filter_bucket_policy
title: Ensure a log metric filter and alarm exist for S3 bucket policy changes
description: You can do real-time monitoring of API calls by directing CloudTrail logs to CloudWatch Logs and establishing corresponding metric filters and alarms. Security Hub recommends that you create a metric filter and alarm for changes to S3 bucket policies. Monitoring these changes might reduce time to detect and correct permissive policies on sensitive S3 buckets.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_account
    definition: |
        WITH filter_data AS (
          SELECT
            trail.account_id,
            trail.name AS trail_name,
            trail.is_logging AS is_logging,
            SPLIT_PART(trail.log_group_arn, ':', 7) AS log_group_name,
            filter.name AS filter_name,
            action_arn AS topic_arn,
            alarm.metric_name,
            subscription.subscription_arn,
            filter.filter_pattern,
            filter.metric_transformation_name
          FROM
            aws_cloudtrail_trail AS trail,
            JSONB_ARRAY_ELEMENTS(trail.event_selectors) AS se,
            aws_cloudwatch_log_metric_filter AS filter,
            aws_cloudwatch_alarm AS alarm,
            JSONB_ARRAY_ELEMENTS_TEXT(alarm.alarm_actions) AS action_arn,
            aws_sns_topic_subscription AS subscription
          WHERE
            trail.is_multi_region_trail IS TRUE
            AND trail.is_logging
            AND se ->> 'ReadWriteType' = 'All'
            AND trail.log_group_arn IS NOT NULL
            AND filter.log_group_name = SPLIT_PART(trail.log_group_arn, ':', 7)
            AND filter.filter_pattern ~ '\s*\$.eventSource\s*=\s*s3.amazonaws.com.+\$.eventName\s*=\s*PutBucketAcl.+\$.eventName\s*=\s*PutBucketPolicy.+\$.eventName\s*=\s*PutBucketCors.+\$.eventName\s*=\s*PutBucketLifecycle.+\$.eventName\s*=\s*PutBucketReplication.+\$.eventName\s*=\s*DeleteBucketPolicy.+\$.eventName\s*=\s*DeleteBucketCors.+\$.eventName\s*=\s*DeleteBucketLifecycle.+\$.eventName\s*=\s*DeleteBucketReplication'
            AND alarm.metric_name LIKE filter.metric_transformation_name
            AND subscription.topic_arn = action_arn
        )
        SELECT
          DISTINCT 'arn:' || a.partition || ':::' || a.account_id AS resource,
          a.platform_integration_id AS platform_integration_id,
          a.platform_resource_id AS platform_resource_id,
          CASE
            WHEN f.trail_name IS NULL THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN f.trail_name IS NULL THEN 'No log metric filter and alarm exist for S3 bucket policy changes.'
            ELSE filter_name || ' forwards events for S3 bucket policy changes.'
          END AS reason,
          a.account_id
        FROM
          aws_account AS a
          LEFT JOIN filter_data AS f ON a.account_id = f.account_id;
severity: high
tags:
    category:
      - Compliance
    cis:
      - 'true'
    cis_item_id:
      - '3.8'
    cis_level:
      - '1'
    cis_section_id:
      - '3'
    cis_type:
      - scored
    cis_version:
      - v1.2.0
    plugin:
      - aws
    service:
      - AWS/CloudWatch
