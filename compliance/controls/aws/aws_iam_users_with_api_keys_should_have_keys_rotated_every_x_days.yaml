id: aws_iam_users_with_api_keys_should_have_keys_rotated_every_x_days
title: IAM Users with API Keys should have keys rotated every X days
description: IAM Users with API Keys should have keys rotated every X days
integration_type:
  - aws_cloud_account
parameters:
  - key: awsIamUserKeyRotateDays
    value: ''
policy:
    language: sql
    primary_resource: aws_iam_credential_report
    definition: |
        SELECT
          user_name AS resource,
          platform_integration_id AS platform_integration_id,
          platform_resource_id AS platform_resource_id,
          (DATE(current_timestamp) - DATE(access_key_1_last_rotated)),
          (DATE(current_timestamp) - DATE(access_key_2_last_rotated)),
          CASE
            WHEN 
              (access_key_1_active AND
              (DATE(current_timestamp) - DATE(access_key_1_last_rotated)) > '{{.awsIamUserKeyRotateDays}}'::int) OR
              (access_key_2_active AND
              (DATE(current_timestamp) - DATE(access_key_2_last_rotated)) > '{{.awsIamUserKeyRotateDays}}'::int)
            THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN (access_key_1_active AND
              (DATE(current_timestamp) - DATE(access_key_1_last_rotated)) > '{{.awsIamUserKeyRotateDays}}'::int) OR
              (access_key_2_active AND
              (DATE(current_timestamp) - DATE(access_key_2_last_rotated)) > '{{.awsIamUserKeyRotateDays}}'::int)
            THEN 
              CASE
                WHEN (access_key_1_last_rotated IS NULL) THEN 'key last rotated in ' || (DATE(current_timestamp) - DATE(access_key_2_last_rotated)) || ' days'
                WHEN (access_key_2_last_rotated IS NULL) THEN 'key last rotated in ' || (DATE(current_timestamp) - DATE(access_key_1_last_rotated)) || ' days'
                ELSE 'key last rotated in ' || GREATEST((DATE(current_timestamp) - DATE(access_key_1_last_rotated)), (DATE(current_timestamp) - DATE(access_key_2_last_rotated))) || ' days'
              END
            ELSE 'keys rotated recently'
          END AS reason,
          region,
          account_id
        FROM
          aws_iam_credential_report
severity: medium
tags:
    category:
      - Compliance
    score_service_name:
      - AWS Identity and Access Management (IAM)
