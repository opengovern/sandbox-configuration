id: aws_foundational_security_cloudfront_12
title: 12 CloudFront distributions should not point to non-existent S3 origins
description: This control checks whether Amazon CloudFront distributions are pointing to non-existent Amazon S3 origins. The control fails for a CloudFront distribution if the origin is configured to point to a non-existent bucket. This control only applies to CloudFront distributions where an S3 bucket without static website hosting is the S3 origin.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_cloudfront_distribution
    definition: |
        WITH distribution_with_non_existent_bucket AS (
          SELECT
            DISTINCT d.arn AS arn,
            TO_JSONB(STRING_TO_ARRAY((STRING_AGG(SPLIT_PART(o ->> 'Id', '.s3', 1), ',')), ',')) AS bucket_name_list
          FROM
            aws_cloudfront_distribution AS d,
            JSONB_ARRAY_ELEMENTS(d.origins) AS o
            LEFT JOIN aws_s3_bucket AS b ON b.name = SPLIT_PART(o ->> 'Id', '.s3', 1)
          WHERE
            b.name IS NULL
            AND o ->> 'DomainName' LIKE '%.s3.%'
          GROUP BY
            d.arn
        )
        SELECT
          DISTINCT b.arn AS resource,
          d.platform_integration_id AS platform_integration_id,
          d.platform_resource_id AS platform_resource_id,
          CASE
            WHEN b.arn IS NULL THEN 'ok'
            ELSE 'alarm'
          END AS status,
          CASE
            WHEN b.arn IS NULL THEN title || ' does not point to any non-existent S3 origins.'
            WHEN JSONB_ARRAY_LENGTH(b.bucket_name_list) > 0
            THEN title ||
            CASE
              WHEN JSONB_ARRAY_LENGTH(b.bucket_name_list) > 2
              THEN CONCAT(' point to non-existent S3 origins ', b.bucket_name_list #>> '{0}', ', ', b.bucket_name_list #>> '{1}', ' and ' || (JSONB_ARRAY_LENGTH(b.bucket_name_list) - 2)::TEXT || ' more.' )
              WHEN JSONB_ARRAY_LENGTH(b.bucket_name_list) = 2
              THEN CONCAT(' point to non-existent S3 origins ', b.bucket_name_list #>> '{0}', ' and ', b.bucket_name_list #>> '{1}', '.')
            ELSE CONCAT(' point to non-existent S3 origin ', b.bucket_name_list #>> '{0}', '.')
            END
          END AS reason
        FROM
          aws_cloudfront_distribution AS d
        LEFT JOIN distribution_with_non_existent_bucket AS b ON b.arn = d.arn;
severity: high
tags: {}
