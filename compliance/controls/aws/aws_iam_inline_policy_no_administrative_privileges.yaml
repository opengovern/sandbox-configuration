id: aws_iam_inline_policy_no_administrative_privileges
title: IAM inline policy should not have administrative privileges
description: Ensure that no inline IAM policies exist that allow administrative privileges.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_iam_user
    definition: |
        WITH full_administrative_privilege_policies AS (
          SELECT
            arn,
            inline_policies_std,
            name,
            account_id,
            region,
            _ctx,
            'iam_user' AS type,
            platform_integration_id,
            platform_resource_id
          FROM
            aws_iam_user
          UNION
          SELECT
            arn,
            inline_policies_std,
            name,
            account_id,
            region,
            _ctx,
            'iam_role' AS type,
            platform_integration_id,
            platform_resource_id
          FROM
            aws_iam_role
          UNION
          SELECT
            arn,
            inline_policies_std,
            name,
            account_id,
            region,
            _ctx,
            'iam_group' AS type,
            platform_integration_id,
            platform_resource_id
          FROM
            aws_iam_group
        ),
        bad_policies AS (
          SELECT
            arn,
            COUNT(*) AS statements_num
          FROM
            full_administrative_privilege_policies,
            jsonb_array_elements(inline_policies_std) AS policy_std,
            jsonb_array_elements(policy_std -> 'PolicyDocument' -> 'Statement') AS s,
            jsonb_array_elements_text(s -> 'Resource') AS resource,
            jsonb_array_elements_text(s -> 'Action') AS action
          WHERE
            s ->> 'Effect' = 'Allow'
            AND resource = '*'
            AND (
              (action = '*'
              OR action = '*:*'
              )
            )
          GROUP BY
            arn
        )
        SELECT
          p.arn AS resource,
          p.platform_integration_id AS platform_integration_id,
          p.platform_resource_id AS platform_resource_id,
          CASE
            WHEN bad.arn IS NULL THEN 'ok'
            ELSE 'alarm'
          END status,
          p.name || ' contains ' || COALESCE(bad.statements_num, 0) ||
            ' statements that allow action "*" on resource "*".' AS reason
        FROM
          full_administrative_privilege_policies AS p
        LEFT JOIN bad_policies AS bad ON p.arn = bad.arn;
severity: low
tags: {}
