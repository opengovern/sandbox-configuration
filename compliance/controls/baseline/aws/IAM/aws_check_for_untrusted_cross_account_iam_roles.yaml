id: aws_check_for_untrusted_cross_account_iam_roles
title: Check for Untrusted Cross-Account IAM Roles
description: Ensure that AWS IAM roles cannot be used by untrusted accounts via cross-account access feature.
integration_type:
  - aws_cloud_account
parameters:
  - key: awsTrustedAccounts
    value: ''
policy:
    language: sql
    primary_resource: aws_iam_role
    definition: |
        SELECT 
          name AS resource,
          platform_resource_id,
          platform_integration_id,
          CASE
            WHEN EXISTS (
              SELECT 1 FROM JSONB_ARRAY_ELEMENTS(assume_role_policy::jsonb -> 'Statement') AS s
              WHERE (s ->> 'Effect') = 'Allow' AND ((s ->> 'Principal')::text = '\"*\"' OR
              (s ->> 'Principal')::text = '{"AWS": "*"}')
            ) THEN 'alarm'
            WHEN '{{.awsTrustedAccounts}}' = '' THEN 'ok'
            WHEN EXISTS (
              SELECT 1 FROM JSONB_ARRAY_ELEMENTS(assume_role_policy::jsonb -> 'Statement') AS s
              WHERE (s ->> 'Effect') = 'Allow' AND NOT('{{.awsTrustedAccounts}}' LIKE ('%' || ((s -> 'Principal' ->> 'AWS')::text) || '%'))
            ) THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN EXISTS (
              SELECT 1 FROM JSONB_ARRAY_ELEMENTS(assume_role_policy::jsonb -> 'Statement') AS s
              WHERE (s ->> 'Effect') = 'Allow' AND ((s ->> 'Principal')::text = '\"*\"' OR
              (s ->> 'Principal')::text = '{"AWS": "*"}')
            ) THEN name || ' is publicly accessible' 
            WHEN '{{.awsTrustedAccounts}}' = '' THEN 'trusted AWS accounts are not defined'
            WHEN EXISTS (
              SELECT 1 FROM JSONB_ARRAY_ELEMENTS(assume_role_policy::jsonb -> 'Statement') AS s
              WHERE (s ->> 'Effect') = 'Allow' AND NOT('{{.awsTrustedAccounts}}' LIKE ('%' || ((s -> 'Principal' ->> 'AWS')::text) || '%'))
            ) THEN name || ' is not configured to allow access only to trusted AWS accounts'
            ELSE name || ' is configured to allow access only to trusted AWS accounts'
          END AS reason,
          region,
          account_id
        FROM 
          aws_iam_role
severity: medium
tags:
    platform_score_cloud_service_name:
      - AWS Identity and Access Management (IAM)
    platform_score_use_case:
      - Problem Identities
    score_service_name:
      - AWS Identity and Access Management (IAM)
    score_tags:
      - Problem Identities
