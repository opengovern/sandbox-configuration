id: azure_sql_database_vulnerability_findings_resolved
title: SQL databases should have vulnerability findings resolved
description: Monitor vulnerability assessment scan results and recommendations for how to remediate database vulnerabilities.
integration_type:
  - azure_subscription
parameters: []
policy:
    language: sql
    primary_resource: azure_sql_database
    definition: |
        WITH vulnerability_findings AS (
          SELECT
            db.id AS database_id,
            scan ->> 'endTime' AS latest_scan_end_time,
            scan ->> 'numberOfFailedSecurityChecks' AS no_of_failed_sec_checks
          FROM
            azure_sql_database AS db,
            jsonb_array_elements(vulnerability_assessment_scan_records) AS scan
          WHERE
            (scan ->> 'numberOfFailedSecurityChecks')::int = 0
          ORDER BY
            scan ->> 'endTime' DESC NULLS LAST
          LIMIT 1
        )
        SELECT
          DISTINCT a.id AS resource,
          a.platform_integration_id AS platform_integration_id,
          a.platform_resource_id AS platform_resource_id,
          CASE
            WHEN s.database_id IS NOT NULL THEN 'ok'
            ELSE 'alarm'
          END AS status,
          CASE
            WHEN s.database_id IS NOT NULL THEN a.name || ' vulnerability findings resolved.'
            ELSE a.title || ' vulnerability findings not resolved.'
          END AS reason,
          a.resource_group AS resource_group,
          sub.display_name AS subscription
        FROM
          azure_sql_database AS a
        LEFT JOIN
          vulnerability_findings AS s ON a.id = s.database_id,
          azure_subscription AS sub
        WHERE
          a.name <> 'master'
          AND sub.subscription_id = a.subscription_id;
severity: high
tags:
    hipaa_hitrust_v92:
      - 'true'
    nist_sp_800_53_rev_5:
      - 'true'
    pci_dss_v321:
      - 'true'
    service:
      - Azure/SQL
