id: aws_iam_role_policy_too_permissive
title: IAM Role Policy Too Permissive
description: Ensure that the access policies attached to your IAM roles adhere to the principle of least privilege.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_iam_role
    definition: |
        WITH too_permissive_policies AS (
          SELECT
            arn
          FROM
            aws_iam_policy,
            jsonb_array_elements(policy_std -> 'Statement') AS s,
            jsonb_array_elements_text(s -> 'Action') AS action
          WHERE
            action IN ('*', '*:*')
            AND s ->> 'Effect' = 'Allow'
        )

        SELECT
          name AS resource,
          platform_integration_id,
          platform_resource_id,
          CASE
            WHEN EXISTS(
              SELECT 1
              FROM jsonb_array_elements_text(attached_policy_arns) AS parn
              LEFT JOIN too_permissive_policies AS tp ON parn = tp.arn
              WHERE tp.arn IS NOT NULL
            ) THEN 'alarm'
            WHEN EXISTS(
              SELECT 1
              FROM jsonb_array_elements(inline_policies_std) AS p,
                   jsonb_array_elements(p -> 'PolicyDocument' -> 'Statement') AS s,
                   jsonb_array_elements_text(s -> 'Action') AS action
              WHERE
                action IN ('*', '*:*')
                AND s ->> 'Effect' = 'Allow'
            ) THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN EXISTS(
              SELECT 1
              FROM jsonb_array_elements_text(attached_policy_arns) AS parn
              LEFT JOIN too_permissive_policies AS tp ON parn = tp.arn
              WHERE tp.arn IS NOT NULL
            ) THEN 'there is too permissive attached policy'
            WHEN EXISTS(
              SELECT 1
              FROM jsonb_array_elements(inline_policies_std) AS p,
                   jsonb_array_elements(p -> 'PolicyDocument' -> 'Statement') AS s,
                   jsonb_array_elements_text(s -> 'Action') AS action
              WHERE
                action IN ('*', '*:*')
                AND s ->> 'Effect' = 'Allow'
            ) THEN 'there is too permissive inline policy'
            ELSE 'there is no too permissive policy'
          END AS reason,
          region,
          account_id
        FROM
          aws_iam_role AS r
severity: medium
tags:
    platform_score_cloud_service_name:
      - AWS Identity and Access Management (IAM)
    platform_score_use_case:
      - Problem Identities
    score_service_name:
      - AWS Identity and Access Management (IAM)
    score_tags:
      - Problem Identities
