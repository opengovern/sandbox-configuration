id: aws_approved_ecs_execute_command_access
title: Approved ECS Execute Command Access
description: Ensure that all access to the ECS Execute Command action is approved
integration_type:
  - aws_cloud_account
parameters:
  - key: awsEcsExecuteCommandIamArns
    value: ''
policy:
    language: sql
    primary_resource: ''
    definition: |
        SELECT
          name AS resource,
          platform_integration_id,
          platform_resource_id,
          'aws_iam_user' AS platform_table_name,
          CASE
            WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'alarm'
            WHEN EXISTS (
                SELECT 1
                FROM jsonb_array_elements_text(attached_policy_arns) AS ap
                LEFT JOIN aws_iam_policy AS p ON p.arn = ap
                WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
              )
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'user is not authorized to do this ecs action'
            WHEN EXISTS (
                SELECT 1
                FROM jsonb_array_elements_text(attached_policy_arns) AS ap
                LEFT JOIN aws_iam_policy AS p ON p.arn = ap
                WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
              )
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'user is not authorized to do this ecs action'
            ELSE 'ok'
          END AS reason,
          region,
          account_id
        FROM
          aws_iam_user

        UNION ALL

        SELECT
          name AS resource,
          platform_integration_id,
          platform_resource_id,
          'aws_iam_role' AS platform_table_name,
          CASE
            WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'alarm'
            WHEN EXISTS (
                SELECT 1
                FROM jsonb_array_elements_text(attached_policy_arns) AS ap
                LEFT JOIN aws_iam_policy AS p ON p.arn = ap
                WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
              )
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'user is not authorized to do this ecs action'
            WHEN EXISTS (
                SELECT 1
                FROM jsonb_array_elements_text(attached_policy_arns) AS ap
                LEFT JOIN aws_iam_policy AS p ON p.arn = ap
                WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
              )
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'user is not authorized to do this ecs action'
            ELSE 'ok'
          END AS reason,
          region,
          account_id
        FROM
          aws_iam_role

        UNION ALL

        SELECT
          name AS resource,
          platform_integration_id,
          platform_resource_id,
          'aws_iam_group' AS platform_table_name,
          CASE
            WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'alarm'
            WHEN EXISTS (
                SELECT 1
                FROM jsonb_array_elements_text(attached_policy_arns) AS ap
                LEFT JOIN aws_iam_policy AS p ON p.arn = ap
                WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
              )
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN (inline_policies_std::text LIKE '%ecs:ExecuteCommand%')
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'user is not authorized to do this ecs action'
            WHEN EXISTS (
                SELECT 1
                FROM jsonb_array_elements_text(attached_policy_arns) AS ap
                LEFT JOIN aws_iam_policy AS p ON p.arn = ap
                WHERE p.policy::text LIKE '%ecs:ExecuteCommand%'
              )
              AND ('{{.awsEcsExecuteCommandIamArns}}' NOT LIKE '%' || arn || '%')
            THEN 'user is not authorized to do this ecs action'
            ELSE 'ok'
          END AS reason,
          region,
          account_id
        FROM
          aws_iam_group
severity: medium
tags:
    platform_score_cloud_service_name:
      - AWS Identity and Access Management (IAM)
    platform_score_use_case:
      - Problem Identities
    score_service_name:
      - AWS Identity and Access Management (IAM)
    score_tags:
      - Problem Identities
