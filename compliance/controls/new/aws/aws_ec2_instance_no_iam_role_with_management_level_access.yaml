id: aws_ec2_instance_no_iam_role_with_management_level_access
title: EC2 instance IAM role should not allow management level access
description: This control ensures that EC2 instance IAM role does not allow management level access.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_ec2_instance
    definition: |
        WITH iam_roles AS (
          SELECT
            r.arn AS role_arn,
            i.arn AS instance_arn
          FROM
            aws_iam_role AS r,
            jsonb_array_elements_text(instance_profile_arns) AS p
            LEFT JOIN aws_ec2_instance AS i ON p = i.iam_instance_profile_arn
          WHERE
            i.arn IS NOT NULL
        ), iam_role_with_permission AS (
          SELECT
            arn
          FROM
            aws_iam_role,
            jsonb_array_elements(assume_role_policy_std->'Statement') AS s,
            jsonb_array_elements_text(s->'Principal'->'Service') AS service,
            jsonb_array_elements_text(s->'Action') AS action
          WHERE
            arn IN (SELECT role_arn FROM iam_roles)
            AND s->>'Effect' = 'Allow'
            AND service = 'ec2.amazonaws.com'
            AND (
              action IN (
                'iam:attachgrouppolicy',
                'iam:attachrolepolicy',
                'iam:attachuserpolicy',
                'iam:createpolicy',
                'iam:createpolicyversion',
                'iam:deleteaccountpasswordpolicy',
                'iam:deletegrouppolicy',
                'iam:deletepolicy',
                'iam:deletepolicyversion',
                'iam:deleterolepermissionsboundary',
                'iam:deleterolepolicy',
                'iam:deleteuserpermissionsboundary',
                'iam:deleteuserpolicy',
                'iam:detachgrouppolicy',
                'iam:detachrolepolicy',
                'iam:detachuserpolicy',
                'iam:putgrouppolicy',
                'iam:putrolepermissionsboundary',
                'iam:putrolepolicy',
                'iam:putuserpermissionsboundary',
                'iam:putuserpolicy',
                'iam:setdefaultpolicyversion',
                'iam:updateassumerolerolicy',
                '*:*'
              )
            )
        )
        SELECT
          i.arn AS resource,
          i.platform_integration_id AS platform_integration_id,
          i.platform_resource_id AS platform_resource_id,
          CASE
            WHEN p.arn IS NULL THEN 'ok'
            ELSE 'alarm'
          END status,
          CASE
            WHEN p.arn IS NULL THEN title || ' has no management level access.'
            ELSE title || ' has management level access.'
          END AS reason
        FROM
          aws_ec2_instance AS i
          LEFT JOIN iam_roles AS r ON r.instance_arn = i.arn
          LEFT JOIN iam_role_with_permission AS p ON p.arn = r.role_arn;
severity: low
tags: {}
