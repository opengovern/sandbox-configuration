id: aws_api_gateway_rest_api_public_endpoint_with_authorizer
title: API Gateway REST API public endpoints should be configured with authorizer
description: Ensure API Gateway REST API public endpoint is configured with authorizer. This rule is non-compliant if API Gateway REST API public endpoint has no authorizer configured.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_api_gateway_rest_api
    definition: |
        SELECT
          'arn:' || p.partition || ':apigateway:' || p.region || '::/apis/' || p.api_id AS resource,
          p.platform_integration_id AS platform_integration_id,
          p.platform_resource_id AS platform_resource_id,
          CASE
            WHEN NOT (endpoint_configuration_types ? 'PRIVATE')
            AND (a.provider_arns IS NOT NULL AND jsonb_array_length(a.provider_arns) > 0)
            THEN 'ok'
            WHEN NOT (endpoint_configuration_types ? 'PRIVATE')
            AND (a.provider_arns IS NULL OR jsonb_array_length(a.provider_arns) = 0)
            THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN NOT (endpoint_configuration_types ? 'PRIVATE')
            AND (a.provider_arns IS NOT NULL AND jsonb_array_length(a.provider_arns) > 0)
            THEN p.name || ' has public endpoint with authorizer.'
            WHEN NOT (endpoint_configuration_types ? 'PRIVATE')
            AND (a.provider_arns IS NULL OR jsonb_array_length(a.provider_arns) = 0)
            THEN p.name || ' has public endpoint without authorizer.'
            ELSE p.name || ' has private endpoint.'
          END AS reason
        FROM
          aws_api_gateway_rest_api AS p
        LEFT JOIN aws_api_gateway_authorizer AS a 
          ON p.api_id = a.rest_api_id;
severity: low
tags: {}
