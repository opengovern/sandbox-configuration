id: aws_cis_v120_3_14
title: 3.14 Ensure a log metric filter and alarm exist for VPC changes
description: Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is possible to have more than 1 VPC within an account, in addition it is also possible to create a peer connection between 2 VPCs enabling network traffic to route between VPCs. It is recommended that a metric filter and alarm be established for changes made to VPCs.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_cloudtrail_trail
    definition: |
        WITH trails AS (
          SELECT
            trail.account_id,
            trail.name AS trail_name,
            trail.is_logging,
            SPLIT_PART(trail.log_group_arn, ':', 7) AS log_group_name
          FROM
            aws_cloudtrail_trail AS trail,
            JSONB_ARRAY_ELEMENTS(trail.event_selectors) AS se
          WHERE
            trail.is_multi_region_trail IS TRUE
            AND trail.is_logging
            AND se ->> 'ReadWriteType' = 'All'
            AND trail.log_group_arn IS NOT NULL
          ORDER BY
            trail_name
        ),
        alarms AS (
          SELECT
            metric_name,
            action_arn AS topic_arn
          FROM
            aws_cloudwatch_alarm,
            JSONB_ARRAY_ELEMENTS_TEXT(aws_cloudwatch_alarm.alarm_actions) AS action_arn
          ORDER BY
            metric_name
        ),
        topic_subscriptions AS (
          SELECT
            subscription_arn,
            topic_arn
          FROM
            aws_sns_topic_subscription
          ORDER BY
            subscription_arn
        ),
        metric_filters AS (
          SELECT
            filter.name AS filter_name,
            filter_pattern,
            log_group_name,
            metric_transformation_name
          FROM
            aws_cloudwatch_log_metric_filter AS filter
          WHERE
            filter.filter_pattern ~ '\s*\$.eventName\s*=\s*CreateVpc.+\$.eventName\s*=\s*DeleteVpc.+\$.eventName\s*=\s*ModifyVpcAttribute.+\$.eventName\s*=\s*AcceptVpcPeeringConnection.+\$.eventName\s*=\s*CreateVpcPeeringConnection.+\$.eventName\s*=\s*DeleteVpcPeeringConnection.+\$.eventName\s*=\s*RejectVpcPeeringConnection.+\$.eventName\s*=\s*AttachClassicLinkVpc.+\$.eventName\s*=\s*DetachClassicLinkVpc.+\$.eventName\s*=\s*DisableVpcClassicLink.+\$.eventName\s*=\s*EnableVpcClassicLink'
          ORDER BY
            filter_name
        ),
        filter_data AS (
          SELECT
            t.account_id,
            t.trail_name,
            f.filter_name
          FROM
            trails AS t
          JOIN
            metric_filters AS f ON f.log_group_name = t.log_group_name
          JOIN
            alarms AS alarm ON alarm.metric_name = f.metric_transformation_name
          JOIN
            topic_subscriptions AS subscription ON subscription.topic_arn = alarm.topic_arn
        )
        SELECT
          DISTINCT 'arn:' || a.partition || ':::' || a.account_id AS resource,
          t.platform_integration_id AS platform_integration_id,
          t.platform_resource_id AS platform_resource_id,
          CASE
            WHEN f.trail_name IS NULL THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN f.trail_name IS NULL THEN 'No log metric filter and alarm exist for VPC changes.'
            ELSE filter_name || ' forwards events for VPC changes.'
          END AS reason
        FROM
          aws_account AS a
        LEFT JOIN filter_data AS f ON a.account_id = f.account_id;
severity: low
tags: {}
