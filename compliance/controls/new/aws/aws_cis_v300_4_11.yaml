id: aws_cis_v300_4_11
title: 4.11 Ensure Network Access Control Lists (NACL) changes are monitored
description: Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs, or an external Security information and event management (SIEM) environment, and establishing corresponding metric filters and alarms. NACLs are used as a stateless packet filter to control ingress and egress traffic for subnets within a VPC. It is recommended that a metric filter and alarm be established for changes made to NACLs.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_account
    definition: |
        WITH trails AS (
          SELECT
            trail.account_id,
            trail.name AS trail_name,
            trail.is_logging,
            split_part(trail.log_group_arn, ':', 7) AS log_group_name
          FROM
            aws_cloudtrail_trail AS trail,
            jsonb_array_elements(trail.event_selectors) AS se
          WHERE
            trail.is_multi_region_trail IS TRUE
            AND trail.is_logging
            AND se ->> 'ReadWriteType' = 'All'
            AND trail.log_group_arn IS NOT NULL
          ORDER BY
            trail_name
        ),
        alarms AS (
          SELECT
            metric_name,
            action_arn AS topic_arn
          FROM
            aws_cloudwatch_alarm,
            jsonb_array_elements_text(aws_cloudwatch_alarm.alarm_actions) AS action_arn
          ORDER BY
            metric_name
        ),
        topic_subscriptions AS (
          SELECT
            subscription_arn,
            topic_arn
          FROM
            aws_sns_topic_subscription
          ORDER BY
            subscription_arn
        ),
        metric_filters AS (
          SELECT
            filter.name AS filter_name,
            filter_pattern,
            log_group_name,
            metric_transformation_name
          FROM
            aws_cloudwatch_log_metric_filter AS filter
          WHERE
            filter.filter_pattern ~ '\s*\$\.eventName\s*=\s*CreateNetworkAcl.+\$\.eventName\s*=\s*CreateNetworkAclEntry.+\$\.eventName\s*=\s*DeleteNetworkAcl.+\$\.eventName\s*=\s*DeleteNetworkAclEntry.+\$\.eventName\s*=\s*ReplaceNetworkAclEntry.+\$\.eventName\s*=\s*ReplaceNetworkAclAssociation'
          ORDER BY
            filter_name
        ),
        filter_data AS (
          SELECT
            t.account_id,
            t.trail_name,
            f.filter_name
          FROM
            trails AS t
          JOIN
            metric_filters AS f ON f.log_group_name = t.log_group_name
          JOIN
            alarms AS alarm ON alarm.metric_name = f.metric_transformation_name
          JOIN
            topic_subscriptions AS subscription ON subscription.topic_arn = alarm.topic_arn
        )
        SELECT
          DISTINCT 'arn:' || a.partition || ':::' || a.account_id AS resource,
          a.platform_integration_id AS platform_integration_id,
          a.platform_resource_id AS platform_resource_id,
          CASE
            WHEN f.trail_name IS NULL THEN 'alarm'
            ELSE 'ok'
          END AS status,
          CASE
            WHEN f.trail_name IS NULL THEN 'No log metric filter and alarm exist for changes to NACLs.'
            ELSE filter_name || ' forwards events for changes to NACLs.'
          END AS reason
        FROM
          aws_account AS a
          LEFT JOIN filter_data AS f ON a.account_id = f.account_id;
severity: low
tags: {}
