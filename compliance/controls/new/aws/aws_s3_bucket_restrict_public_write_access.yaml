id: aws_s3_bucket_restrict_public_write_access
title: S3 buckets should prohibit public write access
description: Manage access to resources in the AWS Cloud by only allowing authorized users, processes, and devices access to AWS Simple Storage Service (AWS S3) buckets.
integration_type:
  - aws_cloud_account
parameters: []
policy:
    language: sql
    primary_resource: aws_s3_bucket
    definition: |
        WITH public_acl AS (
            SELECT DISTINCT b.name
            FROM aws_s3_bucket AS b
            CROSS JOIN LATERAL (
                SELECT 
                    CASE 
                        WHEN jsonb_typeof(b.acl -> 'Grants') = 'array' THEN b.acl -> 'Grants'
                        ELSE '[]'::jsonb
                    END AS grants_json
            ) AS grants_array
            CROSS JOIN LATERAL jsonb_array_elements(grants_array.grants_json) AS grants
            WHERE (grants -> 'Grantee' ->> 'URI' = 'http://acs.amazonaws.com/groups/global/AllUsers'
                   OR grants -> 'Grantee' ->> 'URI' = 'http://acs.amazonaws.com/groups/global/AuthenticatedUsers')
              AND (grants ->> 'Permission' IN ('FULL_CONTROL', 'WRITE_ACP', 'WRITE'))
        ),
        write_access_policy AS (
            SELECT DISTINCT b.name
            FROM aws_s3_bucket AS b
            CROSS JOIN LATERAL (
                SELECT 
                    CASE 
                        WHEN jsonb_typeof(b.policy_std -> 'Statement') = 'array' THEN b.policy_std -> 'Statement'
                        ELSE '[]'::jsonb
                    END AS statements_json
            ) AS statements_array
            CROSS JOIN LATERAL jsonb_array_elements(statements_array.statements_json) AS s
            CROSS JOIN LATERAL (
                SELECT 
                    CASE 
                        WHEN jsonb_typeof(s -> 'Action') = 'array' THEN s -> 'Action'
                        WHEN jsonb_typeof(s -> 'Action') = 'string' THEN jsonb_build_array(s -> 'Action')
                        ELSE '[]'::jsonb
                    END AS actions_json
            ) AS actions_array
            CROSS JOIN LATERAL jsonb_array_elements_text(actions_array.actions_json) AS action
            WHERE s ->> 'Effect' = 'Allow'
              AND (
                  (jsonb_typeof(s -> 'Principal') = 'object' AND (s -> 'Principal' -> 'AWS') = '["*"]'::jsonb)
                  OR s ->> 'Principal' = '*'
              )
              AND (
                  action IN ('*', '*:*', 's3:*')
                  OR action ILIKE 's3:put%'
                  OR action ILIKE 's3:delete%'
                  OR action ILIKE 's3:create%'
                  OR action ILIKE 's3:update%'
                  OR action ILIKE 's3:replicate%'
                  OR action ILIKE 's3:restore%'
              )
        )
        SELECT 
            b.arn AS resource,
            b.platform_integration_id AS platform_integration_id,
            b.platform_resource_id AS platform_resource_id,
            CASE
                WHEN (b.block_public_acls OR a.name IS NULL) AND NOT b.bucket_policy_is_public THEN 'ok'
                WHEN (b.block_public_acls OR a.name IS NULL) AND (b.bucket_policy_is_public AND b.block_public_policy) THEN 'ok'
                WHEN b.bucket_policy_is_public AND p.name IS NULL THEN 'ok'
                ELSE 'alarm'
            END AS status,
            CASE
                WHEN (b.block_public_acls OR a.name IS NULL) AND NOT b.bucket_policy_is_public THEN b.title || ' not publicly writable.'
                WHEN (b.block_public_acls OR a.name IS NULL) AND (b.bucket_policy_is_public AND b.block_public_policy) THEN b.title || ' not publicly writable.'
                WHEN b.bucket_policy_is_public AND p.name IS NULL THEN b.title || ' not publicly writable.'
                ELSE b.title || ' publicly writable.'
            END AS reason,
            b.region,
            b.account_id
        FROM aws_s3_bucket AS b
        LEFT JOIN public_acl AS a ON b.name = a.name
        LEFT JOIN write_access_policy AS p ON b.name = p.name;
severity: high
tags:
    audit_manager_control_tower:
      - 'true'
    category:
      - Compliance
    cis_controls_v8_ig1:
      - 'true'
    cisa_cyber_essentials:
      - 'true'
    fedramp_low_rev_4:
      - 'true'
    fedramp_moderate_rev_4:
      - 'true'
    ffiec:
      - 'true'
    gxp_21_cfr_part_11:
      - 'true'
    hipaa_final_omnibus_security_rule_2013:
      - 'true'
    hipaa_security_rule_2003:
      - 'true'
    nist_800_53_rev_4:
      - 'true'
    nist_800_53_rev_5:
      - 'true'
    nist_800_171_rev_2:
      - 'true'
    nist_csf:
      - 'true'
    pci_dss_v321:
      - 'true'
    plugin:
      - aws
    rbi_cyber_security:
      - 'true'
    service:
      - AWS/S3
    soc_2:
      - 'true'
